# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  webhooks:
    - webhook: analyticsapidev
      connection: analytic-api-dev-build


steps:
  - script: echo Hello, world! ${{parameters.analyticsapidev.newDockerImage}}
    displayName: 'Run a one-line script'
  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'azure-cli'
      azureResourceGroup: 'APIM-RnD-RG'
      kubernetesCluster: 'apim-poc'
      namespace: 'default'
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: azure-test
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: azure-test
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 1
          minReadySeconds: 5
          template:
            metadata:
              labels:
                app: azure-test
            spec:
              nodeSelector:
                "beta.kubernetes.io/os": linux
              containers:
              - name: azure-test
                image: ${{parameters.analyticsapidev.newDockerImage}}
                env:
                  - name: datasource.username
                    valueFrom:
                      secretKeyRef:
                        key: datasource.username
                        name: analytics-secret-7c9dm5m24g
                  - name: datasource.password
                    valueFrom:
                      secretKeyRef:
                        key: datasource.password
                        name: analytics-secret-7c9dm5m24g
                  - name: datasource.url
                    valueFrom:
                      secretKeyRef:
                        key: datasource.url
                        name: analytics-secret-7c9dm5m24g
                  - name: kusto.applicationClientId
                    valueFrom:
                      secretKeyRef:
                        key: kusto.applicationClientId
                        name: analytics-secret-7c9dm5m24g
                  - name: kusto.applicationKey
                    valueFrom:
                      secretKeyRef:
                        key: kusto.applicationKey
                        name: analytics-secret-7c9dm5m24g
                  - name: kusto.authorityId
                    valueFrom:
                      secretKeyRef:
                        key: kusto.authorityId
                        name: analytics-secret-7c9dm5m24g
                  - name: kusto.resourceUri
                    valueFrom:
                      secretKeyRef:
                        key: kusto.resourceUri
                        name: analytics-secret-7c9dm5m24g
                  - name: kusto.database
                    valueFrom:
                      secretKeyRef:
                        key: kusto.database
                        name: analytics-secret-7c9dm5m24g
                  - name: security.jwks
                    valueFrom:
                      secretKeyRef:
                        key: security.jwks
                        name: analytics-secret-7c9dm5m24g
                  - name: security.jwksIssuer
                    valueFrom:
                      secretKeyRef:
                        key: security.jwksIssuer
                        name: analytics-secret-7c9dm5m24g
                  - name: logging.level.org.wso2.choreo.analytics.api
                    value: DEBUG
                ports:
                - containerPort: 8080
                resources:
                  requests:
                    cpu: 250m
                  limits:
                    cpu: 500m
                env:
                - name: REDIS
                  value: "azure-test"
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: azure-test
        spec:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 8080
          selector:
            app: azure-test
      secretType: 'dockerRegistry'
      containerRegistryType: 'Container Registry'
      dockerRegistryEndpoint: 'ruks-docker-registry'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'
